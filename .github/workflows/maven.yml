# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven
# v1
name: Java CI with Maven

on:
  push:
    # branches:
    #   - master
    tags:
      - v1             # Push events to v1 tag
      - v1.*           # Push events to v1.0, v1.1, and v1.9 tags

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Build with Maven
      run: |
        echo version=${{ github.sha }} >>src/main/resources/hellospring.properties
        echo createTime=`date +%Y%m%d_%H%M` >>src/main/resources/hellospring.properties
        mvn -B package --file pom.xml
        cp target/hellospring.jar disk/hellospring.jar
    - name: Docker login
      uses: azure/docker-login@v1
      with:
        login-server: registry.cn-hangzhou.aliyuncs.com
        username: ${{ secrets.aliyun_username }}
        password: ${{ secrets.aliyun_key }}
    - name: Docker build&push
      run: |
        docker build . -t registry.cn-hangzhou.aliyuncs.com/ichengchao/hellojava:${{ github.sha }}
        docker push registry.cn-hangzhou.aliyuncs.com/ichengchao/hellojava:${{ github.sha }}
        docker images
        cat kubernetes/deploy.yaml | sed -e "s/\${version}/${{ github.sha }}/" > kubernetes/tmp.yaml
    - name: test env
      shell: bash
      env:
        SUPER_SECRET: ${{ secrets.mykey }}
        test: testenv
      run: |
        echo mykey2: "$SUPER_SECRET"
        echo 2: "$JAVA_HOME"
        echo 4: "$test"
    - name: test kubectl
      uses: steebchen/kubectl@master
      env:
        KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
      with:
        args: apply -f kubernetes/tmp.yaml
#        args: get pods
    - name: notify to dingding
      run: |
        curl --location --request POST 'https://oapi.dingtalk.com/robot/send?access_token=${{ secrets.dingding_access_token }}' \
        --header 'Content-Type: application/json' \
        --data-raw '{
            "msgtype": "text",
            "text": {
                "content": "deploy success,version:[${{ github.sha }}]"
            }
        }'
        cat kubernetes/tmp.yaml


